load(file="plots/titer_plot_hists.RData")
p_titers1 <- p_titers1 + xlab("Antibody titer (AU/ml") + theme(axis.title.y=element_text(size=8,angle=90,vjust=1.5)) +
labs(tag="A")
p_titers1
fig3 <- p_titers1 + p_bot + plot_layout(heights=c(1,2))
fig3
ggsave(filename="figures/figure3_new.png",plot=fig3,width=8,height=7,dpi=300)
ggsave(filename="figures/figure3_new.pdf",plot=fig3,width=8,height=7)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=5,height=7/3)
ggsave(filename="figures/figure3_new.png",plot=fig3,width=8,height=6,dpi=300)
ggsave(filename="figures/figure3_new.pdf",plot=fig3,width=8,height=6)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=8,height=1.5)
ggsave(filename="figures/figure3_new.png",plot=fig3,width=8,height=7,dpi=300)
fig3 <- p_titers1 + p_bot + plot_layout(heights=c(1,1.75))
fig3
ggsave(filename="figures/figure3_new.png",plot=fig3,width=8,height=7,dpi=300)
ggsave(filename="figures/figure3_new.pdf",plot=fig3,width=8,height=7)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=8,height=1.5)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=5,height=1.5)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=5,height=2)
p_bot <- ggplot(data=titer_res %>% filter(LineageBroad=="Omicron") %>%
## Remove 50+ years not boosted high and low
filter(!(AgeGroup=="50+ years" & Protocol=="Frequent testing" &
LineageBroad_BoostTiterGroup %in% c("OmicronLowNotBoosted","OmicronHighNotBoosted"))),
col="None") +
facet_grid(Protocol~AgeGroup) +
geom_ribbon(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean),alpha=0.5) +
geom_line(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean,col=`Immune status`))+
geom_text(data=samp_sizes,aes(x=18, y=y,label=label,col=`Immune status`),show.legend=FALSE,size=2.5) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Immune status",color="Immune status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_viridis_d(option="D") +
scale_fill_viridis_d(option="D") +
theme(legend.position="bottom",
panel.spacing=unit(1,"lines"),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
plot.tag=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white")) +
labs(tag="B")
load(file="plots/titer_plot.RData")
load(file="plots/titer_plot_hists.RData")
p_titers1 <- p_titers1 + xlab("Antibody titer (AU/ml") + theme(axis.title.y=element_text(size=8,angle=90,vjust=1.5)) +
labs(tag="A")
p_titers1
fig3 <- p_titers1 + p_bot + plot_layout(heights=c(1,1.75))
fig3
ggsave(filename="figures/figure3_new.png",plot=fig3,width=8,height=7,dpi=300)
ggsave(filename="figures/figure3_new.pdf",plot=fig3,width=8,height=7)
ggsave(filename="figures/figure3_back.pdf",plot=p_titer_hists,width=5,height=2)
figS13 <- ggplot(data=titer_res %>% filter(AgeGroup=="30-50"),
col="None") +
facet_grid(LineageBroad~Protocol) +
geom_ribbon(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean),alpha=0.5) +
geom_line(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean,col=`Immune status`))+
geom_text(data=samp_sizes,aes(x=18, y=y,label=label,col=`Immune status`),show.legend=FALSE,size=2.5) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Immune status",color="Immune status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_viridis_d(option="D") +
scale_fill_viridis_d(option="D") +
theme(legend.position="bottom",
panel.spacing=unit(1,"lines"),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
plot.tag=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white")) +
labs(tag="B")
figS13 <- ggplot(data=titer_res %>% filter(AgeGroup=="30-50"),
col="None") +
facet_grid(LineageBroad~Protocol) +
geom_ribbon(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean),alpha=0.5) +
geom_line(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean,col=`Immune status`))+
geom_text(data=samp_sizes,aes(x=18, y=y,label=label,col=`Immune status`),show.legend=FALSE,size=2.5) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Immune status",color="Immune status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_viridis_d(option="D") +
scale_fill_viridis_d(option="D") +
theme(legend.position="bottom",
panel.spacing=unit(1,"lines"),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
plot.tag=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white"))
figS13
samp_sizes
titer_res
titer_res %>% filter(AgeGroup=="30-50")
titer_res
figS13 <- ggplot(data=titer_res %>% filter(AgeGroup=="30-50 years"),
col="None") +
facet_grid(LineageBroad~Protocol) +
geom_ribbon(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean),alpha=0.5) +
geom_line(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean,col=`Immune status`))+
geom_text(data=samp_sizes,aes(x=18, y=y,label=label,col=`Immune status`),show.legend=FALSE,size=2.5) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Immune status",color="Immune status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_viridis_d(option="D") +
scale_fill_viridis_d(option="D") +
theme(legend.position="bottom",
panel.spacing=unit(1,"lines"),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
plot.tag=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white"))
figS13
######################################################
## Analyze baseline regression results
######################################################
## Perform logistic regression on various subsets of the data
## Preamble
library(tidyverse)
library(zoo)
library(lubridate)
library(patchwork)
library(splines)
library(brms)
library(mgcv)
library(data.table)
library(ROCR)
library(tidybayes)
library(data.table)
lineage_colors <- c("Delta"="blue","Omicron"="red","Other"="orange","None"="grey70")
lineage_colors1 <- c("Delta"="blue","Omicron"="red","Other"="orange")
vacc_status_colors <- c("Boosted"="darkgreen","Second dose"="purple")
immunecolors <- c("Other: Unvaccinated"="black","Delta: 1-2 doses"="orange3","Omicron: Boosted"="purple3","Omicron: Not Boosted" = "mediumpurple1")
colors <- c("black","tomato","red3","dodgerblue","blue")
names(colors) <- c("Other","Delta1","Delta2","Omicron1","Omicron2")
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
load("data/data_for_regressions.RData")
dat_subset_use <- dat_subset_use %>% filter(DaysSinceDetection >= 0)
###### BASELINE ######
## Read in the two baseline regressions
load("outputs/immune_models/baseline_1.rdata")
basemodel_freq <- fit
load("outputs/immune_models/baseline_2.rdata")
basemodel_infreq <- fit
## Read in the k-folds CV
load("outputs/immune_models/baseline_1_kfolds.RData")
basemodel_freq_kfold <- kfold_est
load("outputs/immune_models/baseline_2_kfolds.RData")
basemodel_infreq_kfold <- kfold_est
###### AGE ######
## Read in the two age regressions
load("outputs/immune_models/baseline_age_1.RData")
age_freq <- fit
load("outputs/immune_models/baseline_age_2.rdata")
age_infreq <- fit
## Read in the k-folds CV
load("outputs/immune_models/baseline_age_1_kfolds.RData")
age_freq_kfold <- kfold_est
load("outputs/immune_models/baseline_age_2_kfolds.RData")
age_infreq_kfold <- kfold_est
###### VACCINE LINEAGE AGE ######
## Read in the vaccine status and lineage regressions
load("outputs/immune_models/vaccine_and_lineage_age_1.rdata")
vacclineagemodel_freq <- fit
load("outputs/immune_models/vaccine_and_lineage_age_2.rdata")
vacclineagemodel_infreq <- fit
## Read in the k-folds CV
load("outputs/immune_models/vaccine_and_lineage_age_1_kfolds.RData")
vacclineagemodel_freq_kfold <- kfold_est
load("outputs/immune_models/vaccine_and_lineage_age_2_kfolds.RData")
vacclineagemodel_infreq_kfold <- kfold_est
## Assess performance
print_classification_accuracy <- function(fit){
pred <- kfold_predict(fit, method = "predict")
pos <- as.numeric(colMeans(pred$yrep) > 0.5)
estimated <- dplyr::bind_cols(fit$data, pos=pos) %>% mutate(correct= pos == low_ct1)
overall_correct <- estimated %>% summarize(`Proportion correct`=sum(correct)/n())
correct_by_group <- estimated %>% group_by(low_ct1) %>%
summarize(`Proportion correct`=sum(correct)/n()) %>% rename(`Ct<30`=low_ct1)
auc <- performance(prediction(colMeans(pred$yrep), fit$data$low_ct1),measure="auc")@y.values[[1]]
return(list(overall_correct, correct_by_group, auc))
}
## Prediction accuracies
base_freq_res <- print_classification_accuracy(basemodel_freq_kfold)
base_infreq_res <- print_classification_accuracy(basemodel_infreq_kfold)
age_freq_res <- print_classification_accuracy(age_freq_kfold)
age_infreq_res <- print_classification_accuracy(age_infreq_kfold)
vacclineage_freq_res <- print_classification_accuracy(vacclineagemodel_freq_kfold)
vacclineage_infreq_res <- print_classification_accuracy(vacclineagemodel_infreq_kfold)
## Baseline model
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1))
base_freq_draws <- basemodel_freq %>% epred_draws(newdata=newdata)
base_infreq_draws <- basemodel_infreq %>% epred_draws(newdata=newdata)
base_p_dat <- bind_rows(base_freq_draws %>% mutate(Protocol="Frequent testing"), base_infreq_draws %>% mutate(Protocol = "Delayed detection")) %>%
group_by(Protocol, DaysSinceDetection) %>% summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),med=median(.epred))
p_base <- ggplot(base_p_dat, aes(x=DaysSinceDetection,ymin=lower,ymax=upper,fill=Protocol,y=med),col="None") +
geom_ribbon(alpha=0.5) +
geom_line(aes(col=Protocol))+
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(breaks=seq(0,20,by=1)) +
labs(y="Probability of Ct value <30",x="Days since detection") +
theme_minimal() +
theme(legend.position=c(0.7,0.7),
plot.background = element_rect(fill="white",color="white"))
## Age model
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1),AgeGroup=unique(age_freq$data$AgeGroup))
age_freq_draws <- age_freq %>% epred_draws(newdata=newdata)
age_infreq_draws <- age_infreq %>% epred_draws(newdata=newdata)
age_p_dat <- bind_rows(age_freq_draws %>% mutate(Protocol="Frequent testing"), age_infreq_draws %>% mutate(Protocol = "Delayed detection")) %>%
group_by(Protocol, DaysSinceDetection,AgeGroup) %>% summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),med=median(.epred)) %>%
mutate(AgeGroup = ifelse(AgeGroup=="(0,30]","<30",ifelse(AgeGroup=="(30,50]","30-50","50+")))
age_p_dat$Protocol <- factor(age_p_dat$Protocol,levels=c("Frequent testing","Delayed detection"))
p_age <- ggplot(age_p_dat, aes(x=DaysSinceDetection,fill=AgeGroup,ymin=lower,ymax=upper,y=med),col="None") +
geom_ribbon(alpha=0.5) +
geom_line(aes(col=AgeGroup))+
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection") +
theme_classic() +
facet_wrap(~Protocol,ncol=1)+
theme(legend.position=c(0.85,0.85),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white"))
## Vaccine and lineage-specific models
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_VaccStatus=unique(vacclineagemodel_freq$data$LineageBroad_VaccStatus),
AgeGroup=unique(vacclineagemodel_freq$data$AgeGroup))
vacclineage_freq_draws <- vacclineagemodel_freq %>% epred_draws(newdata=newdata)
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_VaccStatus=unique(vacclineagemodel_infreq$data$LineageBroad_VaccStatus),
AgeGroup=unique(vacclineagemodel_infreq$data$AgeGroup))
vacclineage_infreq_draws <- vacclineagemodel_infreq %>% epred_draws(newdata=newdata)
vacclineage_p_dat <- bind_rows(vacclineage_freq_draws %>% mutate(Protocol="Frequent testing"),
vacclineage_infreq_draws %>% mutate(Protocol = "Delayed detection")) %>%
group_by(Protocol, DaysSinceDetection,LineageBroad_VaccStatus,AgeGroup) %>%
summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),med=median(.epred)) %>%
mutate(LineageBroad = ifelse(LineageBroad_VaccStatus %like% "Other","Other",
ifelse(LineageBroad_VaccStatus %like% "Delta","Delta","Omicron"))) %>%
mutate(VaccStatus = ifelse(LineageBroad_VaccStatus %like% "Boosted","Boosted",
ifelse(LineageBroad_VaccStatus %like% "Second dose","Second dose",
ifelse(LineageBroad_VaccStatus %like% "First dose","First dose","Unvaccinated"))))
vacclineage_p_dat$Protocol <- factor(vacclineage_p_dat$Protocol,levels=c("Frequent testing","Delayed detection"))
tmp_dat <- vacclineage_p_dat %>% filter(LineageBroad == "Omicron") %>%
filter(VaccStatus %in% c("Boosted","Second dose")) %>%
filter(AgeGroup == "(30,50]") %>%
mutate(VaccStatus=ifelse(VaccStatus=="Boosted","Omicron: Boosted","Omicron: Not Boosted"))
tmp_dat$VaccStatus <- factor(tmp_dat$VaccStatus,levels=c("Omicron: Boosted","Omicron: Not Boosted"))
p_vacclineage <-  ggplot(tmp_dat,
aes(x=DaysSinceDetection,ymin=lower,ymax=upper,fill=VaccStatus,y=med),col="None") +
facet_wrap(~Protocol) +
geom_ribbon(alpha=0.5) +
geom_line(aes(col=VaccStatus))+
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,25),breaks=seq(0,25,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Vaccination status",color="Vaccination status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_manual(values=immunecolors[3:4]) +
scale_fill_manual(values=immunecolors[3:4])+
theme(legend.position=c(0.85,0.75),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white"))
all_colors <- c("Delta: Boosted"="orange", "Delta: Second dose"="yellow", "Delta: Unvaccinated"="tomato",
"Omicron: Boosted"="purple3", "Omicron: First dose"="lightblue", "Omicron: Second dose"="mediumpurple1",
"Omicron: Unvaccinated"="darkblue", "Other: First dose"="grey80", "Other: Second dose"="grey50",
"Other: Unvaccinated"="black")
samp_sizes <- dat_subset_use %>% ungroup() %>% select(PersonID, VaccStatus,LineageBroad,DetectionSpeed,AgeGroup) %>% distinct() %>% group_by(VaccStatus,LineageBroad,DetectionSpeed) %>% tally() %>% mutate(label=paste0("N=",n)) %>%
mutate(VaccStatusLineage = paste0(LineageBroad, ": ", VaccStatus)) %>%
mutate(y = ifelse(VaccStatus == "Unvaccinated",0.5,
ifelse(VaccStatus == "First dose", 0.6,
ifelse(VaccStatus == "Second dose", 0.7,
0.8)))) %>%
rename(Protocol=DetectionSpeed)
vacclineage_p_dat$Protocol <- factor(vacclineage_p_dat$Protocol, levels=c("Frequent testing","Delayed detection"))
samp_sizes$Protocol <- factor(samp_sizes$Protocol, levels=c("Frequent testing","Delayed detection"))
p_vacclineage_all <-  ggplot(vacclineage_p_dat %>%
filter(AgeGroup == "(0,30]") %>%
mutate(
VaccStatusLineage = paste0(LineageBroad, ": ", VaccStatus)),col="None") +
facet_grid(LineageBroad~Protocol) +
geom_ribbon(alpha=0.25,aes(x=DaysSinceDetection,ymin=lower,ymax=upper,fill=VaccStatusLineage,y=med)) +
geom_line(aes(col=VaccStatusLineage,x=DaysSinceDetection,ymin=lower,ymax=upper,fill=VaccStatusLineage,y=med))+
geom_text(data=samp_sizes,aes(x=22, y=y,label=label,col=VaccStatusLineage),show.legend=FALSE) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,25),breaks=seq(0,25,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Vaccination status",color="Vaccination status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
theme(legend.position="bottom",
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=8),legend.text=element_text(size=8),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white")) +
scale_color_manual(values=all_colors) +
scale_fill_manual(values=all_colors) +
guides(fill=guide_legend(nrow=3),color=guide_legend(nrow=3))
## Numbers for manuscript
## Baseline model
base_freq_res
base_infreq_res
base_p_dat %>% filter(DaysSinceDetection %in% c(5,10))
## Lineage model
age_p_dat %>% filter(DaysSinceDetection %in% c(5,10))
age_freq_res
age_infreq_res
## Vaccinelineage interaction model
## Sample sizes
vacclineagemodel_freq$data %>% group_by(LineageBroad_VaccStatus) %>% tally()
vacclineage_freq_res
vacclineage_infreq_res
p_vacclineage_all
p_vacclineage
p_age
p_vacclineage_alt
p_base
p_age
source("~/Documents/GitHub/SC2-kinetics-immune-history/scripts/plot_boosttiter_regressions_sensitivity.R", echo=TRUE)
## Perform logistic regression on various subsets of the data
## Preamble
library(tidyverse)
library(zoo)
library(lubridate)
library(patchwork)
library(splines)
library(brms)
library(mgcv)
library(data.table)
library(ROCR)
library(tidybayes)
library(Rcpp)
library(future)
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
load("data/data_for_regressions.RData")
dat_subset_use <- dat_subset_use %>% filter(DaysSinceDetection >= 0) %>% ungroup()
## Load 60-90 day filter sensitivity. Note that this fit does not include age group
load("outputs/titer_models/60to90_freq_2.RData")
freq_60to90 <- fit
load("outputs/titer_models_age/60to90_infreq_2.RData")
load("outputs/titer_models/60to90_infreq_2.RData")
infreq_60to90 <- fit
## Get posterior draws
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_BoostTiterGroup=unique(freq_60to90$data$LineageBroad_BoostTiterGroup))
freq_60to90_draws <- freq_60to90 %>% epred_draws(newdata=newdata)
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_BoostTiterGroup=unique(infreq_60to90$data$LineageBroad_BoostTiterGroup))
infreq_60to90_draws <- infreq_60to90 %>% epred_draws(newdata=newdata)
## Get posterior summaries
freq_60to90_res <- freq_60to90_draws %>% group_by(DaysSinceDetection,LineageBroad_BoostTiterGroup) %>%
summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),mean=mean(.epred)) %>%
mutate(Protocol="Frequent testing")
infreq_60to90_res <- infreq_60to90_draws %>% group_by(DaysSinceDetection,LineageBroad_BoostTiterGroup) %>%
summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),mean=mean(.epred))%>%
mutate(Protocol="Delayed detection")
res_60to90 <- bind_rows(freq_60to90_res, infreq_60to90_res)
convert_to_lineage_and_titer <- function(dat){
library(data.table)
dat <- dat %>% mutate(LineageBroad=ifelse(LineageBroad_BoostTiterGroup %like% "Omicron","Omicron",
ifelse(LineageBroad_BoostTiterGroup %like% "Delta","Delta",
ifelse(LineageBroad_BoostTiterGroup %like% "Other","Other",NA))))
dat <- dat %>% mutate(BoostTiterGroup=ifelse(LineageBroad_BoostTiterGroup %like% "LowNotBoosted","LowNotBoosted",
ifelse(LineageBroad_BoostTiterGroup %like% "HighNotBoosted","HighNotBoosted",
ifelse(LineageBroad_BoostTiterGroup %like% "LowBoosted","LowBoosted",
ifelse(LineageBroad_BoostTiterGroup %like% "HighBoosted","HighBoosted",NA
)))))
dat
}
titer_res <- convert_to_lineage_and_titer(titer_res)
titer_res <- convert_to_lineage_and_titer(res_60to90)
res_60to90 <- convert_to_lineage_and_titer(res_60to90)
res_60to90$Protocol <- factor(res_60to90$Protocol, levels=c("Frequent testing","Delayed detection"))
## Get better labels
res_60to90 <- res_60to90 %>% mutate(BoostTiterGroup = case_when(
BoostTiterGroup=="HighBoosted"~"Omicron; Boosted: >250 AU/ml",
BoostTiterGroup=="LowBoosted"~"Omicron; Boosted: ≤250 AU/ml",
BoostTiterGroup=="HighNotBoosted"~"Omicron; Not Boosted: >250 AU/ml",
BoostTiterGroup=="LowNotBoosted"~"Omicron; Not Boosted: ≤250 AU/ml",
TRUE~NA_character_))
res_60to90$BoostTiterGroup <- factor(res_60to90$BoostTiterGroup,
levels=c( "Omicron; Boosted: ≤250 AU/ml",
"Omicron; Boosted: >250 AU/ml",
"Omicron; Not Boosted: ≤250 AU/ml",
"Omicron; Not Boosted: >250 AU/ml"))
res_60to90 <- res_60to90 %>% rename(`Immune status`=BoostTiterGroup)
dat_subset_use <- dat_subset_use %>% filter(UseLessThan90 == TRUE)
## Get sample sizes for plot
samp_sizes <- expand_grid(LineageBroad="Omicron",BoostTiterGroup=unique(dat_subset_use$BoostTiterGroup),DetectionSpeed=unique(dat_subset_use$DetectionSpeed)) %>% drop_na() %>%
left_join(
dat_subset_use %>% filter(LineageBroad=="Omicron") %>% select(PersonID, BoostTiterGroup,DetectionSpeed) %>% distinct() %>% drop_na() %>%
group_by(BoostTiterGroup,DetectionSpeed) %>% tally()) %>%
mutate(n=ifelse(is.na(n),0,n))
samp_sizes
## Create label and better factor names
samp_sizes <- samp_sizes %>% rename(Protocol=DetectionSpeed)
samp_sizes$Protocol <- factor(samp_sizes$Protocol, levels=c("Frequent testing","Delayed detection"))
samp_sizes <- samp_sizes %>% mutate(label=paste0("N=",n))
samp_sizes <- samp_sizes %>% mutate(BoostTiterGroup = case_when(
BoostTiterGroup=="HighBoosted"~"Omicron; Boosted: >250 AU/ml",
BoostTiterGroup=="LowBoosted"~"Omicron; Boosted: ≤250 AU/ml",
BoostTiterGroup=="HighNotBoosted"~"Omicron; Not Boosted: >250 AU/ml",
BoostTiterGroup=="LowNotBoosted"~"Omicron; Not Boosted: ≤250 AU/ml",
TRUE~NA_character_))
samp_sizes <- samp_sizes %>%
mutate(y = ifelse(
BoostTiterGroup == "Omicron; Boosted: ≤250 AU/ml", 0.8,
ifelse(
BoostTiterGroup == "Omicron; Boosted: >250 AU/ml", 0.7,
ifelse(
BoostTiterGroup == "Omicron; Not Boosted: ≤250 AU/ml", 0.6,0.5))))
samp_sizes$BoostTiterGroup <- factor(samp_sizes$BoostTiterGroup,
levels=c( "Omicron; Boosted: ≤250 AU/ml",
"Omicron; Boosted: >250 AU/ml",
"Omicron; Not Boosted: ≤250 AU/ml",
"Omicron; Not Boosted: >250 AU/ml"))
samp_sizes <- samp_sizes %>% rename(`Immune status`=BoostTiterGroup)
pA <- ggplot(data=res_60to90 %>% filter(LineageBroad=="Omicron"),col="None") +
facet_wrap(~Protocol) +
geom_ribbon(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean),alpha=0.5) +
geom_line(aes(x=DaysSinceDetection,ymin=lower,ymax=upper,
fill=`Immune status`,y=mean,col=`Immune status`))+
geom_text(data=samp_sizes,aes(x=18, y=y,label=label,col=`Immune status`),show.legend=FALSE,size=2.5) +
scale_y_continuous(limits=c(0,1),expand=c(0,0), breaks=seq(0,1,by=0.2)) +
scale_x_continuous(limits=c(0,20),breaks=seq(0,20,by=5)) +
labs(y="Probability of Ct value <30",x="Days since detection",fill="Immune status",color="Immune status") +
theme_classic() +
geom_vline(xintercept=5,linetype="dashed") +
geom_hline(yintercept=0.05,linetype="dashed") +
scale_color_viridis_d(option="D") +
scale_fill_viridis_d(option="D") +
theme(legend.position="bottom",
panel.spacing=unit(1,"lines"),
strip.background=element_blank(),
strip.text=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8),
legend.title=element_text(size=6),legend.text=element_text(size=6),
plot.tag=element_text(face="bold"),
plot.background = element_rect(fill="white",color="white")) +
labs(tag="B")
pA
dat_subset_use <- dat_subset_use %>% filter(DaysSinceDetection >= 0) %>% ungroup()
load("data/data_for_regressions.RData")
dat_subset_use <- dat_subset_use %>% filter(DaysSinceDetection >= 0) %>% ungroup()
dat_subset_use <- dat_subset_use %>% filter(TiterSensitivity==TRUE)
## Load 60-90 day filter sensitivity. Note that this fit does not include age group
load("outputs/titer_models_sensitivity/all_freq_2.RData")
freq_sens <- fit
freq_sens
conditional_effects(fit)
## Load 60-90 day filter sensitivity. Note that this fit does not include age group
load("outputs/titer_models_sensitivity/all_freq_2.RData")
freq_sens <- fit
load("outputs/titer_models_sensitivity/all_infreq_2.RData")
infreq_sens <- fit
## Load 60-90 day filter sensitivity. Note that this fit does not include age group
load("outputs/titer_models_sensitivity/all_freq_2.RData")
freq_sens <- fit
load("outputs/titer_models_sensitivity/all_infreq_2.RData")
infreq_sens <- fit
## Get posterior draws
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_BoostTiterGroup=unique(freq_sens$data$LineageBroad_BoostTiterGroup))
freq_sens_draws <- freq_sens %>% epred_draws(newdata=newdata)
newdata <- expand_grid(DaysSinceDetection=seq(0,20,by=0.1), LineageBroad_BoostTiterGroup=unique(infreq_sens$data$LineageBroad_BoostTiterGroup))
infreq_sens_draws <- infreq_sens %>% epred_draws(newdata=newdata)
## Get posterior summaries
freq_sens_res <- freq_sens_draws %>% group_by(DaysSinceDetection,LineageBroad_BoostTiterGroup) %>%
summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),mean=mean(.epred)) %>%
mutate(Protocol="Frequent testing")
infreq_sens_res <- infreq_sens_draws %>% group_by(DaysSinceDetection,LineageBroad_BoostTiterGroup) %>%
summarize(lower=quantile(.epred,0.025),upper=quantile(.epred,0.975),mean=mean(.epred))%>%
mutate(Protocol="Delayed detection")
source("~/Documents/GitHub/SC2-kinetics-immune-history/scripts/figureS13.R", echo=TRUE)
ggsave(pA/pB,filename = paste0(savewd,"/figures/supplement/figS13.png"),width=8,height=7,dpi=300)
ggsave(pA/pB,filename = paste0(savewd,"/figures/supplement/figS13.pdf"),width=8,height=7)
ggsave(pA/pB,filename = "/figures/supplement/figS13.png",width=8,height=7,dpi=300)
ggsave(pA/pB,filename = "/figures/supplement/figS13.pdf",width=8,height=7)
getwd()
ggsave(pA/pB,filename = "figures/supplement/figS13.png",width=8,height=7,dpi=300)
ggsave(pA/pB,filename = "figures/supplement/figS13.pdf",width=8,height=7)
