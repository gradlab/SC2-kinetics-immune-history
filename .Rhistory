source('~/Documents/GitHub/SC2-kinetics-immune-history/scripts/prep_data_for_regressions.R', echo=TRUE)
warnings()
dat_subset_use
dat_subset_use$AgeGroup
dat_subset_use %>% group_by(PersonID, CumulativeInfectionNumber)
dat_subset_use %>% group_by(PersonID, CumulativeInfectionNumber) %>% select(PersonID, AgeGroup,CumulativeInfectionNumber) %>% group_by(PersonID, CumulativeInfectionNumber) %>% tally()
dat_subset_use %>% group_by(PersonID, CumulativeInfectionNumber) %>% select(PersonID, AgeGroup,CumulativeInfectionNumber)%>% distinct() %>% group_by(PersonID, CumulativeInfectionNumber) %>% tally() %>% filter(n > 1)
head(dat_subset_use)
dat_subset_use$AgeGroup
dat$AgeGroup
# Titers by age and vaccine class -----------------------------------------
dat %>% ungroup() %>% select(PersonID, AgeGroup, Titer) %>% drop_na() %>%
distinct() %>% ggplot() + geom_boxplot(aes(x=AgeGroup,y=Titer))
dat_titer_tmp <- dat %>% filter(LineageBroad == "Omicron",NewInfectionIdentified==1) %>%
ungroup() %>% select(PersonID, AgeGroup, Titer,VaccStatus) %>% drop_na() %>% distinct() %>%
mutate(VaccStatus1 = ifelse(VaccStatus == "Boosted","Boosted","Not boosted"))
straptheboot <- function(df, goods, nstraps){
out <- tibble()
for(indexA in 1:nstraps){
out <- bind_rows(out, (df %>%
mutate(n=1:n()) %>%
mutate(cut=ceiling(runif(1)*n())) %>%
filter(n!=cut) %>%
select(-n, -cut) %>%
summarise(across(all_of(goods), ~ mean(.x, na.rm = TRUE)))))
}
return(out)
}
dat_titer_tmp_summ <- dat_titer_tmp %>% group_by(AgeGroup) %>%
straptheboot(goods="Titer",nstraps=1000) %>%
group_by(AgeGroup) %>%
summarise(titer_mean=mean(Titer),titer_lwr=quantile(Titer,0.025),titer_upr=quantile(Titer,0.975))
dat_titer_tmp_summ <- dat_titer_tmp_summ %>%
mutate(label=paste0(signif(titer_mean,3)," AU \n(95% CI: ",signif(titer_lwr,3),"-",signif(titer_upr,3),")"))
dat_titer_tmp_summ <- dat_titer_tmp %>% group_by(AgeGroup) %>%
straptheboot(goods="Titer",nstraps=100) %>%
group_by(AgeGroup) %>%
summarise(titer_mean=mean(Titer),titer_lwr=quantile(Titer,0.025),titer_upr=quantile(Titer,0.975))
# Titers by age and vaccine class -----------------------------------------
dat %>% ungroup() %>% select(PersonID, AgeGroup, Titer) %>% drop_na() %>%
distinct() %>% ggplot() + geom_boxplot(aes(x=AgeGroup,y=Titer))
dat_titer_tmp <- dat %>% filter(LineageBroad == "Omicron",NewInfectionIdentified==1) %>%
ungroup() %>% select(PersonID, AgeGroup, Titer,VaccStatus) %>% drop_na() %>% distinct() %>%
mutate(VaccStatus1 = ifelse(VaccStatus == "Boosted","Boosted","Not boosted"))
straptheboot <- function(df, goods, nstraps){
out <- tibble()
for(indexA in 1:nstraps){
out <- bind_rows(out, (df %>%
mutate(n=1:n()) %>%
mutate(cut=ceiling(runif(1)*n())) %>%
filter(n!=cut) %>%
select(-n, -cut) %>%
summarise(across(all_of(goods), ~ mean(.x, na.rm = TRUE)))))
}
return(out)
}
dat_titer_tmp_summ <- dat_titer_tmp %>% group_by(AgeGroup) %>%
straptheboot(goods="Titer",nstraps=100) %>%
group_by(AgeGroup) %>%
summarise(titer_mean=mean(Titer),titer_lwr=quantile(Titer,0.025),titer_upr=quantile(Titer,0.975))
dat_titer_tmp_summ <- dat_titer_tmp_summ %>%
mutate(label=paste0(signif(titer_mean,3)," AU \n(95% CI: ",signif(titer_lwr,3),"-",signif(titer_upr,3),")"))
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,65]"="mediumpurple1","(65,100]"="red")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,65]"="mediumpurple1","(65,100]"="red")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,4,by=1),
labels=c("<30","30-50","50-65","65+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1
dat_titer_tmp
dat_titer_tmp_summ
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,4,by=1),
labels=c("<30","30-50","50-65","65+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,4,by=1),
labels=c("<30","30-50","50+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,3,by=1),
labels=c("<30","30-50","50+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1
warnings()
dat_titer_tmp_summ
dat_titer_tmp
ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5)
dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer))
dat_titer_tmp$AgeGroup <- factor(dat_titer_tmp$AgeGroup)
straptheboot <- function(df, goods, nstraps){
out <- tibble()
for(indexA in 1:nstraps){
out <- bind_rows(out, (df %>%
mutate(n=1:n()) %>%
mutate(cut=ceiling(runif(1)*n())) %>%
filter(n!=cut) %>%
select(-n, -cut) %>%
summarise(across(all_of(goods), ~ mean(.x, na.rm = TRUE)))))
}
return(out)
}
dat_titer_tmp_summ <- dat_titer_tmp %>% group_by(AgeGroup) %>%
straptheboot(goods="Titer",nstraps=100) %>%
group_by(AgeGroup) %>%
summarise(titer_mean=mean(Titer),titer_lwr=quantile(Titer,0.025),titer_upr=quantile(Titer,0.975))
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,3,by=1),
labels=c("<30","30-50","50+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1
dat_titer_tmp_summ <- dat_titer_tmp_summ %>%
mutate(label=paste0(signif(titer_mean,3)," AU \n(95% CI: ",signif(titer_lwr,3),"-",signif(titer_upr,3),")"))
dat_titer_tmp_summ
dat_titer_tmp_summ
p_titers1 <- ggplot(data=dat_titer_tmp_summ) +
geom_beeswarm(data=dat_titer_tmp%>% mutate(Titer1 = ifelse(Titer == 800, Titer + rnorm(n(),0,5),Titer)),
aes(x=Titer1,y=as.numeric(AgeGroup),fill=AgeGroup,col=AgeGroup),groupOnX=FALSE,cex=0.5,size=0.75,alpha=0.5) +
geom_text(aes(y=as.numeric(AgeGroup)+0.25,x=titer_mean + 70,label=label),size=2.2)+
geom_point(aes(y=as.numeric(AgeGroup), x=titer_mean),size=3) +
geom_segment(aes(y=as.numeric(AgeGroup), yend=as.numeric(AgeGroup), x=titer_lwr, xend=titer_upr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_lwr, xend=titer_lwr)) +
geom_segment(aes(y=as.numeric(AgeGroup)-0.2, yend=as.numeric(AgeGroup)+0.2, x=titer_upr, xend=titer_upr)) +
theme_classic() +
scale_color_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
scale_fill_manual(values=c("(0,30]"="black","(30,50]"="orange3","(50,100]"="mediumpurple1")) +
xlab("Titer (AU/ml)") +
ylab("Age group") +
scale_y_continuous(breaks=seq(1,3,by=1),
labels=c("<30","30-50","50+")
) +
theme(legend.position = "none",plot.tag=element_text(face="bold"),
axis.text=element_text(size=8),axis.title=element_text(size=8)) +
coord_flip()
p_titers1
dat_titer_tmp_summ
dat
ct_dat1
colnames(ct_Dat1)
colnames(ct_dat1)
ct_dat1 %>% filter(!is.na(Titer))
dat_to_save
dat_to_save %>% select(PersonID, TiterDate,BoosterDate)
dat_to_save %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% mutate()
dat_to_save %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct9)
dat_to_save %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct()
dat_to_save %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate)
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate)
## Select only variables which we need for later analyses
dat_to_save <- ct_dat1 %>% select(PersonID,  IQVIAID,Role,
Lineage, TestDate, TestResult, CtT1, CtT2,
Age,
AgeGroup,
DaysSinceDetection,
DaysSinceNegative,
MostRecentDetection,
LastNegative,
TimeRelToPeak,
PeakDate,
Diagnosis,
RecentlyPositive,
IQVIA_detection,
NewInfectionIdentified,
VaccStatus,
AcuteInfectionSK,
AcuteInfection1,
NewExposure,
MostRecentExposure,
DaysSinceExposure,
DaysSincePreviousExposure,
CumulativeInfectionNumber,
CumulativeExposureNumber,
TotalInfections,
NVaccinations,
VaccineDose1Date,
VaccineDose2Date,
BoosterDate,
Titer,
Symp_Init,
Symp_Ever,
Symp_OnsetDate)
## Label Broad Omicron and Delta lineages
## Label Broad Omicron and Delta lineages
lineages <- unique(dat_to_save$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
## If detected after 2021-07-18 and before 2021-12-03, has a Ct value, and no sequencing, assume Delta
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-12-03") & MostRecentDetection > as.Date("2021-07-18") & LineageBroad=="None","Delta",LineageBroad))
## If detected before 2021-05-29 (pre-delta), then assume "Other"
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-05-29") &  LineageBroad=="None","Other",LineageBroad))
## Convert dates to integers
min_date <- as.Date("2020-01-01")
dat_to_save$Symp_OnsetDate <- as.Date(dat_to_save$Symp_OnsetDate,origin="1970-01-01")
## Clean up symptom status information
dat_to_save <- dat_to_save %>% mutate(Symp_Ever = ifelse(is.na(Symp_Ever),"Unknown",Symp_Ever))
dat_to_save <- dat_to_save %>% group_by(PersonID, CumulativeExposureNumber) %>% fill(Symp_Init, .direction="down") %>%
fill(Symp_Ever, .direction="down") %>%
fill(Symp_OnsetDate, .direction="down")
## Titer management
## Set <13 to 0 and >800 to 800
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer < 13, 13, Titer))
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer > 800, 800, Titer))
dat_to_save <- dat_to_save %>% mutate(log_titer = log(Titer))
dat_to_save %>% filter(!is.na(Titer))
## How long since previous exposure?
## 4-week exposure groups
dat_to_save <- dat_to_save %>% mutate(time_group=cut(DaysSincePreviousExposure,breaks=seq(0,600,by=28)))
dat_to_save <- dat_to_save %>% left_join(dat_to_save %>%
group_by(PersonID, CumulativeExposureNumber) %>%
mutate(tmp_i = 1:n()) %>%
filter(tmp_i == 1) %>%
select(PersonID, CumulativeExposureNumber, DaysSincePreviousExposure) %>%
rename(DaysSinceExposureUse=DaysSincePreviousExposure))
## Days since previous exposure groups
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(DaysSinceExposureUse > 12*7, ">3 months",
ifelse(DaysSinceExposureUse > 4*7, "1-3 months","<1 month")))
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(is.na(DaysSinceExposureGroup),"Naive", DaysSinceExposureGroup))
dat_to_save$DaysSinceExposureGroup <- factor(dat_to_save$DaysSinceExposureGroup, levels=c("Naive",">3 months","1-3 months","<1 month"))
high_threshold <- 250
## Negative, low, medium and high titer groups
dat_to_save <- dat_to_save %>% mutate(TiterGroup=cut(Titer, breaks=c(-1,125,high_threshold,1000)))
dat_to_save <- dat_to_save %>% mutate(TiterGroupAlt=cut(Titer, breaks=c(-1,13,400,799,1000)))
## Mark when titer was actually measured
dat_to_save <- dat_to_save %>% mutate(TiterMeasured = !is.na(Titer))
dat_to_save %>% filter(TiterMeasured == TRUE)
## Add titer date to date titer was measured. Then, for each individual, carry this date downward. Note we'll have some individuals with multiple titers
dat_to_save <- dat_to_save %>% mutate(TiterDate = ifelse(TiterMeasured == 1, as.Date(TestDate), NA)) %>%
group_by(PersonID) %>% fill(TiterDate,.direction="down")
dat_to_save
dat_to_save %>% select(TiterDate)
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate)
## Select only variables which we need for later analyses
dat_to_save <- ct_dat1 %>% select(PersonID,  IQVIAID,Role,
Lineage, TestDate, TestResult, CtT1, CtT2,
Age,
AgeGroup,
DaysSinceDetection,
DaysSinceNegative,
MostRecentDetection,
LastNegative,
TimeRelToPeak,
PeakDate,
Diagnosis,
RecentlyPositive,
IQVIA_detection,
NewInfectionIdentified,
VaccStatus,
AcuteInfectionSK,
AcuteInfection1,
NewExposure,
MostRecentExposure,
DaysSinceExposure,
DaysSincePreviousExposure,
CumulativeInfectionNumber,
CumulativeExposureNumber,
TotalInfections,
NVaccinations,
VaccineDose1Date,
VaccineDose2Date,
BoosterDate,
Titer,
Symp_Init,
Symp_Ever,
Symp_OnsetDate)
## Label Broad Omicron and Delta lineages
## Label Broad Omicron and Delta lineages
lineages <- unique(dat_to_save$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
## If detected after 2021-07-18 and before 2021-12-03, has a Ct value, and no sequencing, assume Delta
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-12-03") & MostRecentDetection > as.Date("2021-07-18") & LineageBroad=="None","Delta",LineageBroad))
## If detected before 2021-05-29 (pre-delta), then assume "Other"
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-05-29") &  LineageBroad=="None","Other",LineageBroad))
## Convert dates to integers
min_date <- as.Date("2020-01-01")
dat_to_save$Symp_OnsetDate <- as.Date(dat_to_save$Symp_OnsetDate,origin="1970-01-01")
## Clean up symptom status information
dat_to_save <- dat_to_save %>% mutate(Symp_Ever = ifelse(is.na(Symp_Ever),"Unknown",Symp_Ever))
dat_to_save <- dat_to_save %>% group_by(PersonID, CumulativeExposureNumber) %>% fill(Symp_Init, .direction="down") %>%
fill(Symp_Ever, .direction="down") %>%
fill(Symp_OnsetDate, .direction="down")
## Titer management
## Set <13 to 0 and >800 to 800
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer < 13, 13, Titer))
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer > 800, 800, Titer))
dat_to_save <- dat_to_save %>% mutate(log_titer = log(Titer))
## How long since previous exposure?
## 4-week exposure groups
dat_to_save <- dat_to_save %>% mutate(time_group=cut(DaysSincePreviousExposure,breaks=seq(0,600,by=28)))
dat_to_save <- dat_to_save %>% left_join(dat_to_save %>%
group_by(PersonID, CumulativeExposureNumber) %>%
mutate(tmp_i = 1:n()) %>%
filter(tmp_i == 1) %>%
select(PersonID, CumulativeExposureNumber, DaysSincePreviousExposure) %>%
rename(DaysSinceExposureUse=DaysSincePreviousExposure))
## Days since previous exposure groups
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(DaysSinceExposureUse > 12*7, ">3 months",
ifelse(DaysSinceExposureUse > 4*7, "1-3 months","<1 month")))
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(is.na(DaysSinceExposureGroup),"Naive", DaysSinceExposureGroup))
dat_to_save$DaysSinceExposureGroup <- factor(dat_to_save$DaysSinceExposureGroup, levels=c("Naive",">3 months","1-3 months","<1 month"))
high_threshold <- 250
## Negative, low, medium and high titer groups
dat_to_save <- dat_to_save %>% mutate(TiterGroup=cut(Titer, breaks=c(-1,125,high_threshold,1000)))
dat_to_save <- dat_to_save %>% mutate(TiterGroupAlt=cut(Titer, breaks=c(-1,13,400,799,1000)))
## Mark when titer was actually measured
dat_to_save <- dat_to_save %>% mutate(TiterMeasured = !is.na(Titer))
## Add titer date to date titer was measured. Then, for each individual, carry this date downward. Note we'll have some individuals with multiple titers
dat_to_save <- dat_to_save %>% mutate(TiterDate = ifelse(TiterMeasured == 1, as.Date(TestDate), NA)) %>%
group_by(PersonID) %>% fill(TiterDate,.direction="down")
## Create flag for sensitivity analysis using only individuals with a titer measurement 100-200 days since a previous exposure
tmp_ids <- dat_to_save %>% filter(TiterDate == TestDate) %>% select(PersonID, DaysSinceExposure) %>%
distinct() %>% filter(DaysSinceExposure >= 100, DaysSinceExposure <= 200) %>%
select(-DaysSinceExposure) %>%
mutate(TiterSensitivity = TRUE) %>%
distinct()
dat_to_save <- dat_to_save %>% left_join(tmp_ids) %>% mutate(TiterSensitivity = ifelse(is.na(TiterSensitivity),FALSE, TiterSensitivity))
dat_to_save <- dat_to_save %>% group_by(PersonID) %>%
fill(Titer,.direction="downup") %>%
fill(log_titer,.direction="downup") %>%
fill(Titer,.direction="downup") %>%
fill(TiterGroup,.direction="downup") %>%
fill(TiterGroupAlt,.direction="downup")
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate) %>%
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate)
## Add titer date to date titer was measured. Then, for each individual, carry this date downward. Note we'll have some individuals with multiple titers
dat_to_save <- dat_to_save %>% mutate(TiterDate = as.Date(ifelse(TiterMeasured == 1, as.Date(TestDate), NA),origin="1970-01-01")) %>%
group_by(PersonID) %>% fill(TiterDate,.direction="down")
## Select only variables which we need for later analyses
dat_to_save <- ct_dat1 %>% select(PersonID,  IQVIAID,Role,
Lineage, TestDate, TestResult, CtT1, CtT2,
Age,
AgeGroup,
DaysSinceDetection,
DaysSinceNegative,
MostRecentDetection,
LastNegative,
TimeRelToPeak,
PeakDate,
Diagnosis,
RecentlyPositive,
IQVIA_detection,
NewInfectionIdentified,
VaccStatus,
AcuteInfectionSK,
AcuteInfection1,
NewExposure,
MostRecentExposure,
DaysSinceExposure,
DaysSincePreviousExposure,
CumulativeInfectionNumber,
CumulativeExposureNumber,
TotalInfections,
NVaccinations,
VaccineDose1Date,
VaccineDose2Date,
BoosterDate,
Titer,
Symp_Init,
Symp_Ever,
Symp_OnsetDate)
## Label Broad Omicron and Delta lineages
## Label Broad Omicron and Delta lineages
lineages <- unique(dat_to_save$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
## If detected after 2021-07-18 and before 2021-12-03, has a Ct value, and no sequencing, assume Delta
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-12-03") & MostRecentDetection > as.Date("2021-07-18") & LineageBroad=="None","Delta",LineageBroad))
## If detected before 2021-05-29 (pre-delta), then assume "Other"
dat_to_save <- dat_to_save %>% mutate(LineageBroad = ifelse(MostRecentDetection < as.Date("2021-05-29") &  LineageBroad=="None","Other",LineageBroad))
## Convert dates to integers
min_date <- as.Date("2020-01-01")
dat_to_save$Symp_OnsetDate <- as.Date(dat_to_save$Symp_OnsetDate,origin="1970-01-01")
## Clean up symptom status information
dat_to_save <- dat_to_save %>% mutate(Symp_Ever = ifelse(is.na(Symp_Ever),"Unknown",Symp_Ever))
dat_to_save <- dat_to_save %>% group_by(PersonID, CumulativeExposureNumber) %>% fill(Symp_Init, .direction="down") %>%
fill(Symp_Ever, .direction="down") %>%
fill(Symp_OnsetDate, .direction="down")
## Titer management
## Set <13 to 0 and >800 to 800
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer < 13, 13, Titer))
dat_to_save <- dat_to_save %>% mutate(Titer = ifelse(Titer > 800, 800, Titer))
dat_to_save <- dat_to_save %>% mutate(log_titer = log(Titer))
## How long since previous exposure?
## 4-week exposure groups
dat_to_save <- dat_to_save %>% mutate(time_group=cut(DaysSincePreviousExposure,breaks=seq(0,600,by=28)))
dat_to_save <- dat_to_save %>% left_join(dat_to_save %>%
group_by(PersonID, CumulativeExposureNumber) %>%
mutate(tmp_i = 1:n()) %>%
filter(tmp_i == 1) %>%
select(PersonID, CumulativeExposureNumber, DaysSincePreviousExposure) %>%
rename(DaysSinceExposureUse=DaysSincePreviousExposure))
## Days since previous exposure groups
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(DaysSinceExposureUse > 12*7, ">3 months",
ifelse(DaysSinceExposureUse > 4*7, "1-3 months","<1 month")))
dat_to_save <- dat_to_save %>% mutate(DaysSinceExposureGroup = ifelse(is.na(DaysSinceExposureGroup),"Naive", DaysSinceExposureGroup))
dat_to_save$DaysSinceExposureGroup <- factor(dat_to_save$DaysSinceExposureGroup, levels=c("Naive",">3 months","1-3 months","<1 month"))
high_threshold <- 250
## Negative, low, medium and high titer groups
dat_to_save <- dat_to_save %>% mutate(TiterGroup=cut(Titer, breaks=c(-1,125,high_threshold,1000)))
dat_to_save <- dat_to_save %>% mutate(TiterGroupAlt=cut(Titer, breaks=c(-1,13,400,799,1000)))
## Mark when titer was actually measured
dat_to_save <- dat_to_save %>% mutate(TiterMeasured = !is.na(Titer))
## Add titer date to date titer was measured. Then, for each individual, carry this date downward. Note we'll have some individuals with multiple titers
dat_to_save <- dat_to_save %>% mutate(TiterDate = as.Date(ifelse(TiterMeasured == 1, as.Date(TestDate), NA),origin="1970-01-01")) %>%
group_by(PersonID) %>% fill(TiterDate,.direction="down")
## Create flag for sensitivity analysis using only individuals with a titer measurement 100-200 days since a previous exposure
tmp_ids <- dat_to_save %>% filter(TiterDate == TestDate) %>% select(PersonID, DaysSinceExposure) %>%
distinct() %>% filter(DaysSinceExposure >= 100, DaysSinceExposure <= 200) %>%
select(-DaysSinceExposure) %>%
mutate(TiterSensitivity = TRUE) %>%
distinct()
dat_to_save <- dat_to_save %>% left_join(tmp_ids) %>% mutate(TiterSensitivity = ifelse(is.na(TiterSensitivity),FALSE, TiterSensitivity))
dat_to_save <- dat_to_save %>% group_by(PersonID) %>%
fill(Titer,.direction="downup") %>%
fill(log_titer,.direction="downup") %>%
fill(Titer,.direction="downup") %>%
fill(TiterGroup,.direction="downup") %>%
fill(TiterGroupAlt,.direction="downup")
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate)
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate) %>% ggplot() + geom_histogram(aes(x=Time))
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,VaccineDose2Date,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate,Time1=VaccineDose2Date-TiterDate) %>% ggplot() + geom_histogram(aes(x=Time1))
dat_to_save %>% filter(TestDate == TiterDate) %>% select(PersonID, TiterDate,BoosterDate,VaccineDose2Date,AgeGroup,Titer) %>% distinct() %>% mutate(Time = BoosterDate - TiterDate,Time1=VaccineDose2Date-TiterDate) %>% ggplot() + geom_histogram(aes(x=Time1)) + facet_wrap(~AgeGroup)
