select(-DaysSinceExposure) %>%
mutate(TiterSensitivity = TRUE) %>%
distinct()
dat <- dat %>% left_join(tmp_ids) %>% mutate(TiterSensitivity = ifelse(is.na(TiterSensitivity),FALSE, TiterSensitivity))
dat <- dat %>% group_by(PersonID) %>% fill(Titer,.direction="downup") %>% fill(log_titer,.direction="downup") %>%
fill(TiterGroup,.direction="downup") %>%
fill(TiterGroupAlt,.direction="downup")
## Find when individuals were detected relative to their last negative PCR result
dat_detections <- dat %>%
filter(DaysSinceDetection == 0) %>%
group_by(PersonID, CumulativeInfectionNumber) %>%
mutate(DetectionSpeed = ifelse(DaysSinceNegative >= 2 | is.na(DaysSinceNegative),
">=2 days",ifelse(DaysSinceNegative < 2, "<=1 days",NA))) %>%
mutate(DetectionSpeed=ifelse(is.na(DetectionSpeed),
">=2 days",DetectionSpeed)) %>%
select(PersonID, TestDate, DetectionSpeed, DaysSinceNegative,CumulativeInfectionNumber)
dat <- dat %>% left_join(dat_detections)%>%
fill(DetectionSpeed, .direction="down")
dat <- dat %>%
mutate(DetectionSpeed = ifelse(NewInfectionIdentified == 1 & is.na(DetectionSpeed), ">=2 days", DetectionSpeed))
## Make the -1 Ct detections NA so we don't use them
dat<- dat %>% mutate(CtT1 = ifelse(!is.na(CtT1) & CtT1 < 0, NA, CtT1),
CtT2 = ifelse(!is.na(CtT2) & CtT2 < 0, NA, CtT2))
## Use negatives and assumed negatives as 40
dat <- dat %>%
mutate(CtT1=ifelse(TestResult %in% c("Assumed Negative","Negative"),40,CtT1),CtT2=ifelse(TestResult %in% c("Assumed Negative","Negative"),40,CtT2))
## Label Broad Omicron and Delta lineages
lineages <- unique(dat$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
head(dat)
dat %>% filter(NewInfectionIdentified == 1)
dat %>% filter(NewInfectionIdentified == 1) %>% filter(Lineage == "None")
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
dat$LineageBroadConfirmed <- dat$LineageBroad
## If detected after 2021-07-18 and before 2021-12-03, and no sequencing, assume Delta
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage == "None" & !is.na(MostRecentDetection) & MostRecentDetection < as.Date("2021-12-03") & MostRecentDetection > as.Date("2021-07-18") & LineageBroad=="None","Delta",LineageBroad))
## If detected before 2021-05-29 (pre-delta), then assume "Other"
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage == "None" & !is.na(MostRecentDetection) & MostRecentDetection < as.Date("2021-05-29") & LineageBroad=="None","Other",LineageBroad))
dat %>% filter(NewInfectionIdentified == 1) %>% filter(Lineage == "None")
dat %>% filter(NewInfectionIdentified == 1) %>% filter(LineageBroad == "None")
dat %>% filter(NewInfectionIdentified == 1)
dat %>% filter(NewInfectionIdentified == 1) %>% nrow
############################################################
## CLEAN DATA FOR REGRESSION MODELS -- PUBLICATION VERSION
## James Hay <jameshay218@gmail.com>
## 2022-06-21
############################################################
library(tidyverse)
library(lubridate)
library(data.table)
library(ggbeeswarm)
setwd("~/Documents/GitHub/ct_nba/")
dat <- read_csv("data/ct_dat_subset_20220617.csv")
colnames(dat)
dat <- dat %>% mutate(Symp_Ever = ifelse(is.na(Symp_Ever),"Unknown",Symp_Ever))
dat <- dat %>% group_by(PersonID, CumulativeExposureNumber) %>% fill(Symp_Init, .direction="down") %>%
fill(Symp_Ever, .direction="down") %>%
fill(Symp_OnsetDate, .direction="down")
## Titer management
## Set <13 to 0 and >800 to 800
dat <- dat %>% mutate(Titer = ifelse(Titer < 13, 13, Titer))
dat <- dat %>% mutate(Titer = ifelse(Titer > 800, 800, Titer))
dat <- dat %>% mutate(log_titer = log(Titer))
## Add some groups
## 10-day age buckets
dat <- dat %>% mutate(age_group=cut(Age, breaks=seq(0,100,by=10)))
## 4-week exposure groups
dat <- dat %>% mutate(time_group=cut(DaysSincePreviousExposure,breaks=seq(0,600,by=28)))
## Negative, low, medium and high titer groups
high_threshold <- 250
dat <- dat %>% mutate(TiterGroup=cut(Titer, breaks=c(-1,125,high_threshold,1000)))
dat <- dat %>% mutate(TiterGroupAlt=cut(Titer, breaks=c(-1,13,400,799,1000)))
## Mark when titer was actually measured
dat <- dat %>% mutate(TiterMeasured = !is.na(Titer))
## Add titer date to date titer was measured. Then, for each individual, carry this date downward. Note we'll have some individuals with multiple titers
dat <- dat %>% mutate(TiterDate = ifelse(TiterMeasured == 1, as.Date(TestDate), NA)) %>%
group_by(PersonID) %>% fill(TiterDate,.direction="down")
dat$TiterDate <- as.Date(dat$TiterDate,origin="1970-01-01")
tmp_ids <- dat %>% filter(TiterDate == TestDate) %>% select(PersonID, DaysSinceExposure) %>%
distinct() %>% filter(DaysSinceExposure >= 100, DaysSinceExposure <= 200) %>%
select(-DaysSinceExposure) %>%
mutate(TiterSensitivity = TRUE) %>%
distinct()
dat <- dat %>% left_join(tmp_ids) %>% mutate(TiterSensitivity = ifelse(is.na(TiterSensitivity),FALSE, TiterSensitivity))
dat <- dat %>% group_by(PersonID) %>% fill(Titer,.direction="downup") %>% fill(log_titer,.direction="downup") %>%
fill(TiterGroup,.direction="downup") %>%
fill(TiterGroupAlt,.direction="downup")
## Find when individuals were detected relative to their last negative PCR result
dat_detections <- dat %>%
filter(DaysSinceDetection == 0) %>%
group_by(PersonID, CumulativeInfectionNumber) %>%
mutate(DetectionSpeed = ifelse(DaysSinceNegative >= 2 | is.na(DaysSinceNegative),
">=2 days",ifelse(DaysSinceNegative < 2, "<=1 days",NA))) %>%
mutate(DetectionSpeed=ifelse(is.na(DetectionSpeed),
">=2 days",DetectionSpeed)) %>%
select(PersonID, TestDate, DetectionSpeed, DaysSinceNegative,CumulativeInfectionNumber)
dat <- dat %>% left_join(dat_detections)%>%
fill(DetectionSpeed, .direction="down")
dat <- dat %>%
mutate(DetectionSpeed = ifelse(NewInfectionIdentified == 1 & is.na(DetectionSpeed), ">=2 days", DetectionSpeed))
## Make the -1 Ct detections NA so we don't use them
dat<- dat %>% mutate(CtT1 = ifelse(!is.na(CtT1) & CtT1 < 0, NA, CtT1),
CtT2 = ifelse(!is.na(CtT2) & CtT2 < 0, NA, CtT2))
## Use negatives and assumed negatives as 40
dat <- dat %>%
mutate(CtT1=ifelse(TestResult %in% c("Assumed Negative","Negative"),40,CtT1),CtT2=ifelse(TestResult %in% c("Assumed Negative","Negative"),40,CtT2))
## Label Broad Omicron and Delta lineages
lineages <- unique(dat$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
dat$LineageBroadConfirmed <- dat$LineageBroad
## If detected after 2021-07-18 and before 2021-12-03, and no sequencing, assume Delta
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage == "None" & !is.na(MostRecentDetection) & MostRecentDetection < as.Date("2021-12-03") & MostRecentDetection > as.Date("2021-07-18") & LineageBroad=="None","Delta",LineageBroad))
## If detected before 2021-05-29 (pre-delta), then assume "Other"
dat <- dat %>% mutate(LineageBroad = ifelse(Lineage == "None" & !is.na(MostRecentDetection) & MostRecentDetection < as.Date("2021-05-29") & LineageBroad=="None","Other",LineageBroad))
## Assign individuals to boost and titer group interaction
## If titer is measured before the booster, boosted, and titer is lower than the threshold, then low-boosted
## If titer is measured before the booster, boosted, and titer is higher than the threshold, then high-boosted
## If not boosted and titer is lower than the threshold, then low-notboosted
## If not boosted and titer is higher than the threshold, then high-notboosted
dat <- dat %>%
mutate(BoostTiterGroup = ifelse(TiterDate < BoosterDate & VaccStatus == "Boosted" & !is.na(Titer) & Titer <= high_threshold, "LowBoosted", NA)) %>%
mutate(BoostTiterGroup = ifelse(TiterDate < BoosterDate & VaccStatus == "Boosted" & !is.na(Titer) & Titer > high_threshold, "HighBoosted", BoostTiterGroup)) %>%
mutate(BoostTiterGroup = ifelse(VaccStatus != "Boosted" & !is.na(Titer) & Titer <= high_threshold, "LowNotBoosted", BoostTiterGroup)) %>%
mutate(BoostTiterGroup = ifelse(VaccStatus != "Boosted" & !is.na(Titer) & Titer > high_threshold, "HighNotBoosted", BoostTiterGroup))
## Assign individuals to boost and titer group interaction, alternative titer grouping
high_threshold2 <- 400
dat <- dat %>%
mutate(BoostTiterGroupAlt = ifelse(TiterDate < BoosterDate & VaccStatus == "Boosted" & !is.na(Titer) & Titer <= high_threshold2, "LowBoostedAlt", NA)) %>%
mutate(BoostTiterGroupAlt = ifelse(TiterDate < BoosterDate & VaccStatus == "Boosted" & !is.na(Titer) & Titer > high_threshold2, "HighBoostedAlt", BoostTiterGroupAlt)) %>%
mutate(BoostTiterGroupAlt = ifelse(VaccStatus != "Boosted" & !is.na(Titer) & Titer <= high_threshold2, "LowNotBoostedAlt", BoostTiterGroupAlt)) %>%
mutate(BoostTiterGroupAlt = ifelse(VaccStatus != "Boosted" & !is.na(Titer) & Titer > high_threshold2, "HighNotBoostedAlt", BoostTiterGroupAlt))
## 60 infections with a Titer but no listed boost titer group -- this is because the titer was taken after the booster
dat %>% filter(NewInfectionIdentified == 1, is.na(BoostTiterGroup), !is.na(Titer))
## Sample sizes for lineage/boost titer analyses -- turns out we only have 8 delta infections with a titer and boosted
dat %>% filter(NewInfectionIdentified == 1) %>% group_by(LineageBroad, BoostTiterGroup) %>% tally()
## Record last titer for each individual and find 60 and 90 days post draw
dat_titer_draws <- dat%>% filter(TiterMeasured == 1) %>%
mutate(TiterDraw=TestDate,TiterDraw60=TiterDraw+60,TiterDraw90=TiterDraw+90) %>%
select(PersonID, TiterDraw,TiterDraw60,TiterDraw90,CumulativeInfectionNumber)
## How many infections within 60 days of the last blood draw?
dat %>% left_join(dat_titer_draws) %>%
fill(TiterDraw,.direction="downup") %>%  fill(TiterDraw60,.direction="downup") %>% fill(TiterDraw90,.direction="downup") %>%
filter(NewInfectionIdentified==1) %>%
group_by(PersonID) %>%
filter(TestDate > TiterDraw, TestDate <= TiterDraw60) %>%
group_by(LineageBroad) %>%
tally()
## How many infections within 90 days of the blood draw?
dat %>% left_join(dat_titer_draws) %>%
fill(TiterDraw,.direction="downup") %>%  fill(TiterDraw60,.direction="downup") %>% fill(TiterDraw90,.direction="downup") %>%
filter(NewInfectionIdentified==1) %>%
filter(TestDate > TiterDraw, TestDate <= TiterDraw90) %>%
group_by(LineageBroad) %>%
tally()
## How many infections 60-90 days after the blood draw?
dat %>% left_join(dat_titer_draws) %>%
fill(TiterDraw,.direction="downup") %>%  fill(TiterDraw60,.direction="downup") %>% fill(TiterDraw90,.direction="downup") %>%
filter(NewInfectionIdentified==1) %>%
filter(TestDate >= TiterDraw60, TestDate <= TiterDraw90) %>%
group_by(LineageBroad) %>%
tally()
## Mark these infections
dat_titer_markers <- dat %>% left_join(dat_titer_draws) %>%
fill(TiterDraw,.direction="downup") %>%  fill(TiterDraw60,.direction="downup") %>% fill(TiterDraw90,.direction="downup") %>%
filter(NewInfectionIdentified==1) %>%
group_by(PersonID) %>%
mutate(UseLessThan60 = TestDate > TiterDraw & TestDate <= TiterDraw60,
UseLessThan90 = TestDate > TiterDraw & TestDate <= TiterDraw90,
Use60to90 = TestDate >= TiterDraw60 & TestDate <= TiterDraw90) %>%
select(PersonID, CumulativeInfectionNumber, UseLessThan60, UseLessThan90, Use60to90) %>%
mutate(UseLessThan60 = ifelse(is.na(UseLessThan60),FALSE,UseLessThan60),
UseLessThan90 = ifelse(is.na(UseLessThan90),FALSE,UseLessThan90),
Use60to90 = ifelse(is.na(Use60to90),FALSE,Use60to90)) %>%
distinct()
dat <- dat %>% left_join(dat_titer_markers)
dat <- dat %>% mutate(Symptom_Onset = ifelse(!is.na(Symp_OnsetDate) & TestDate == Symp_OnsetDate,1,0))
dat <- dat %>% select(-c(IQVIAID, TestDate, MostRecentDetection,PeakDate,IQVIA_detection,MostRecentExposure,BoosterDate,VaccineDose2Date, LastNegative,VaccineDose1Date, AcuteInfection1, AcuteInfectionSK,Symp_OnsetDate,Age, Diagnosis, RecentlyPositive,TiterDate)) %>%
filter(!is.na(DaysSinceDetection) | NewInfectionIdentified == 1)
dat
dat %>% filter(NewInfectionIdentified == 1)
dat %>% filter(NewInfectionIdentified == 1) %>% nrow
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
savewd <- getwd()
## Ct threshold to count as "low"
low_ct_threshold <- 30
## Antibody titer threshold to count as "high"
high_threshold <- 250
# Clean data --------------------------------------------------------------
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
dat
dat %>% filter(LineageBroad == 480)
dat %>% filter(LineageBroad == "None")
dat %>% filter(NewInfectionIdentified==1) %>% filter(LineageBroad == "None")
dat %>% filter(NewInfectionIdentified==1) %>% filter(LineageBroad == "None") %>% nrow()
# Clean data --------------------------------------------------------------
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
## Remove BA.2
dat <- dat %>% filter(LineageBroad != "BA.2" | is.na(LineageBroad))
dat %>% filter(NewInfectionIdentified==1) %>% filter(LineageBroad == "None") %>% nrow()
dat %>% select(PersonID, CumulativeInfectionNumber, LineageBroad) %>% distinct() %>% filter(LineageBroad == "None") %>% nrow()
######################################################
## SCRIPT 1 -- summary of data
######################################################
library(tidyverse)
library(ggplot2)
library(data.table)
library(patchwork)
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
lineage_colors <- c("Delta"="red3","Omicron"="blue","Other"="black","None"="grey70")
## Set to FALSE if you have the original data files
anonymous <- TRUE
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
tmp1 <- repeat_dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- repeat_dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
repeat_dat <- left_join(tmp2, tmp1) %>% ungroup()
## Number of individuals
bind_rows(dat, repeat_dat) %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
2162 + 26046 + 28148
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
nrow(dat)
dat
dat %>% group_by(TestResult) %>% tally()
## Number of individuals
bind_rows(dat, repeat_dat) %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
nrow(repeat_dat)
nrow(dat)
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
nrow(dat)
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
nrow(repeat_dat)
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
lineage_colors <- c("Delta"="red3","Omicron"="blue","Other"="black","None"="grey70")
## Set to FALSE if you have the original data files
anonymous <- TRUE
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
## Number of individuals
bind_rows(dat, repeat_dat) %>% select(PersonID) %>% distinct() %>% nrow()
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
dat
nrow(dat)
dat %>% select(PersonID) %>% distinct() %>% nrow
## Number of individuals
dat %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
nrow(repeat_dat)
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
nrow(dat)
nrow(repeat_dat)
nrow(repeat_dat) + nrow(dat)
repeat_dat
repeat_dat %>% group_by(TestResult) %>% tally()
1119 + 2632
######################################################
## SCRIPT 1 -- summary of data
######################################################
library(tidyverse)
library(ggplot2)
library(data.table)
library(patchwork)
#setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
setwd("~/Documents/GitHub/ct_nba")
lineage_colors <- c("Delta"="red3","Omicron"="blue","Other"="black","None"="grey70")
## Set to FALSE if you have the original data files
anonymous <- FALSE
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
## Number of individuals
dat %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
nrow(dat)
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
lineage_colors <- c("Delta"="red3","Omicron"="blue","Other"="black","None"="grey70")
## Set to FALSE if you have the original data files
anonymous <- TRUE
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
## Number of individuals
dat %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Age distribution
if(!anonymous){
dat %>% select(PersonID, Age) %>% distinct() %>% group_by(PersonID) %>% filter(Age == min(Age,na.rm=TRUE)) %>% ungroup() %>% drop_na() %>% filter(!is.na(Age)) %>% summarize(mean_age=mean(Age),lower_95=quantile(Age,0.025),upper_95=quantile(Age,0.975))
}
## Vaccination status
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber), TestDate == max(TestDate)) %>%
group_by(VaccStatus) %>% tally()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber), TestDate == max(TestDate), VaccStatus != "No record") %>%
ungroup() %>% tally()
## Date range of actual tests
if(!anonymous){
## Role distribution
role_key <- c("Player"="Player", "Staff"="Staff", "Misc"="Misc", "Team Staff"="Staff", "Household"="Household",
"Game Day Assistant"="Misc",
"Contractor/Consultant"="Contractor/Consultant", "Vendor"="Vendor", "League Protocol Compliance Officer"="Misc",
"vendor"="Vendor", "Referee"="Referee", "NBA Staff"="Staff", "Referee Trainer"="Referee", "All-Star"="Player",
"Referee Household"="Household", "Guest"="Guest", "Drug Free Sport"="Misc", "Combine Player"="Player",
"guest"="Guest", "Summer_league"="Misc", "Broadcast"="Misc")
dat$Role <- role_key[dat$Role]
dat %>% filter(TestResult %in% c("Negative","Positive","Inconclusive")) %>%
summarize(min_date=min(TestDate,na.rm=TRUE),max_date=max(TestDate,na.rm=TRUE))
min_date <- dat %>% filter(TestResult %in% c("Negative","Positive","Inconclusive")) %>% summarize(x=min(TestDate,na.rm=TRUE)) %>% pull(x)
dat %>% filter(PersonID %in% multiple_roles) %>% select(PersonID, Role) %>% distinct()
## Correct some roles
dat[dat$PersonID == 969,"Role"] <- "Referee"
dat[dat$PersonID == 1031,"Role"] <- "Staff"
dat[dat$PersonID == 1162,"Role"] <- "Player"
dat[dat$PersonID == 1794,"Role"] <- "Staff"
dat[dat$PersonID == 1815,"Role"] <- "Staff"
dat[dat$PersonID == 1822,"Role"] <- "Player"
dat[dat$PersonID == 1853,"Role"] <- "Household"
dat[dat$PersonID == 1860,"Role"] <- "Household"
}
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
repeat_dat <- read_csv("data/ct_data_cleaned_repeats.csv")
## Number of individuals
dat %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Age distribution
if(!anonymous){
dat %>% select(PersonID, Age) %>% distinct() %>% group_by(PersonID) %>% filter(Age == min(Age,na.rm=TRUE)) %>% ungroup() %>% drop_na() %>% filter(!is.na(Age)) %>% summarize(mean_age=mean(Age),lower_95=quantile(Age,0.025),upper_95=quantile(Age,0.975))
}
## Vaccination status
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber), TestDate == max(TestDate)) %>%
group_by(VaccStatus) %>% tally()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber), TestDate == max(TestDate), VaccStatus != "No record") %>%
ungroup() %>% tally()
## Date range of actual tests
if(!anonymous){
## Role distribution
role_key <- c("Player"="Player", "Staff"="Staff", "Misc"="Misc", "Team Staff"="Staff", "Household"="Household",
"Game Day Assistant"="Misc",
"Contractor/Consultant"="Contractor/Consultant", "Vendor"="Vendor", "League Protocol Compliance Officer"="Misc",
"vendor"="Vendor", "Referee"="Referee", "NBA Staff"="Staff", "Referee Trainer"="Referee", "All-Star"="Player",
"Referee Household"="Household", "Guest"="Guest", "Drug Free Sport"="Misc", "Combine Player"="Player",
"guest"="Guest", "Summer_league"="Misc", "Broadcast"="Misc")
dat$Role <- role_key[dat$Role]
dat %>% filter(TestResult %in% c("Negative","Positive","Inconclusive")) %>%
summarize(min_date=min(TestDate,na.rm=TRUE),max_date=max(TestDate,na.rm=TRUE))
min_date <- dat %>% filter(TestResult %in% c("Negative","Positive","Inconclusive")) %>% summarize(x=min(TestDate,na.rm=TRUE)) %>% pull(x)
dat %>% filter(PersonID %in% multiple_roles) %>% select(PersonID, Role) %>% distinct()
## Correct some roles
dat[dat$PersonID == 969,"Role"] <- "Referee"
dat[dat$PersonID == 1031,"Role"] <- "Staff"
dat[dat$PersonID == 1162,"Role"] <- "Player"
dat[dat$PersonID == 1794,"Role"] <- "Staff"
dat[dat$PersonID == 1815,"Role"] <- "Staff"
dat[dat$PersonID == 1822,"Role"] <- "Player"
dat[dat$PersonID == 1853,"Role"] <- "Household"
dat[dat$PersonID == 1860,"Role"] <- "Household"
}
bind_rows(repeat_dat, dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% nrow()
bind_rows(repeat_dat, dat)  %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Number of positive tests
dat %>% filter(TestResult %in% c("Positive","Inconclusive")) %>% distinct() %>% nrow()
dat %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Positive","Inconclusive")) %>% distinct() %>% nrow()
## Number of negative tests
dat %>% filter(TestResult %in% c("Negative")) %>% distinct() %>% nrow()
repeat_dat %>% filter(TestResult %in% c("Negative")) %>% distinct() %>% nrow()
dat %>% filter(NewInfectionIdentified == 1) %>% nrow()
dat %>% filter(NewInfectionIdentified == 1) %>% select(PersonID) %>% distinct() %>% nrow()
lineages <- unique(dat$Lineage)
delta_lineages <-lineages[lineages %like% "AY" | lineages == "B.1.617.2"]
omicron_lineages <- c("Suspected Omicron",lineages[lineages %like% "BA.1"])
ba2 <- lineages[lineages %like% "BA.2"]
dat <- dat %>% mutate(LineageBroadConfirmed = ifelse(Lineage %in% delta_lineages, "Delta",
ifelse(Lineage %in% omicron_lineages, "Omicron",
ifelse(Lineage %in% ba2,"BA.2",
ifelse(Lineage == "None", "None","Other")))))
dat %>% filter(NewInfectionIdentified == 1) %>% group_by(LineageBroadConfirmed) %>% tally()
dat %>% filter(NewInfectionIdentified == 1) %>% group_by(LineageBroadConfirmed) %>% tally()
1 + 266 + 801 + 1560 + 247
1 + 266 + 801 + 1560 + 247 - 801
## Number of infections
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, CumulativeInfectionNumber) %>% distinct()  %>% group_by(CumulativeInfectionNumber) %>% tally()
## Number of exposures
dat %>% group_by(PersonID) %>% filter(CumulativeExposureNumber == max(CumulativeExposureNumber)) %>% select(PersonID, CumulativeExposureNumber) %>% distinct()  %>% group_by(CumulativeExposureNumber) %>% tally()
## Vaccination statuses by the end
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber), TestDate == max(TestDate)) %>% group_by(VaccStatus) %>% tally()
2875 - 1374
732 + 12 + 1374 + 373 + 106
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
dat
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber))
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% distinct()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct() %>% nrow()
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
length(unique(dat$PersonID))
## Because things like e.g., vaccination status can change partway through an infection, we need to re-create the categories using the category at the time of detection, not at the time of observation.
tmp1 <- dat %>% group_by(PersonID, CumulativeInfectionNumber) %>% mutate(x = abs(DaysSinceDetection)) %>% filter(x == min(x)) %>%
select(-c(x, DaysSinceDetection, TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified))
tmp2 <- dat %>% select(PersonID, CumulativeInfectionNumber, DaysSinceDetection,TestDate, TestResult, CtT1, CtT2, DaysSinceNegative, LastNegative, TimeRelToPeak,NewInfectionIdentified)
dat <- left_join(tmp2, tmp1) %>% ungroup()
length(unique(dat$PersonID))
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct() %>% nrow()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% group_by(VaccStatus) %>% tally()
dat %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct() %>% group_by(VaccStatus) %>% tally()
load("data/data_for_regressions.RData")
dat_subset_use
dat_subset_use %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus)
dat_subset_use %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct()
dat_subset_use %>% group_by(PersonID) %>% filter(CumulativeInfectionNumber == max(CumulativeInfectionNumber)) %>% select(PersonID, VaccStatus) %>% distinct() %>% group_by(VaccStatus) %>% tally()
######################################################
## SCRIPT 1 -- summary of data
######################################################
library(tidyverse)
library(ggplot2)
library(data.table)
library(patchwork)
setwd("~/Documents/GitHub/ct_nba")
lineage_colors <- c("Delta"="red3","Omicron"="blue","Other"="black","None"="grey70")
## Read in cleaned data
dat <- read_csv("data/ct_dat_subset_20220617.csv")
repeat_dat <- read_csv("data/ct_dat_repeats_20220617.csv")
## Number of individuals
bind_rows(dat, repeat_dat) %>% select(PersonID) %>% distinct() %>% nrow()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Number of tests
bind_rows(dat, repeat_dat) %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
repeat_dat %>% filter(TestResult %in% c("Negative","Inconclusive","Positive")) %>% group_by(TestResult) %>% tally()
## Age distribution
dat %>% select(PersonID, Age) %>% distinct() %>% group_by(PersonID) %>% filter(Age == min(Age,na.rm=TRUE)) %>% ungroup() %>% drop_na() %>% filter(!is.na(Age)) %>% summarize(mean_age=mean(Age),lower_95=quantile(Age,0.025),upper_95=quantile(Age,0.975))
## Vaccination status
dat %>% group_by(PersonID) %>% filter(TestDate == max(TestDate)) %>%
group_by(VaccStatus) %>% tally()
dat %>% group_by(PersonID) %>% filter(TestDate == max(TestDate), VaccStatus != "No record") %>% ungroup() %>% tally()
setwd("~/Documents/GitHub/SC2-kinetics-immune-history/")
savewd <- getwd()
## Ct threshold to count as "low"
low_ct_threshold <- 30
## Antibody titer threshold to count as "high"
high_threshold <- 250
# Clean data --------------------------------------------------------------
## Read in cleaned data
dat <- read_csv("data/ct_data_cleaned.csv")
dat %>% filter(NewInfectionIdentified==1) %>% group_by(LienageBroad) %>% tally()
dat %>% filter(NewInfectionIdentified==1) %>% group_by(LineageBroad) %>% tally()
